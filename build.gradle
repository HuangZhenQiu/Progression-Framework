buildscript {
  repositories {
      jcenter()
      mavenCentral()
  }

  dependencies {
      classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.0'
  }
}

import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

allprojects {
  apply plugin: 'idea'

  repositories {
    mavenCentral()
    mavenLocal()
    maven {
       url "http://repo.spring.io/libs-release-remote"
    }
    maven {
       url "http://sanity.github.com/maven-repo/repository/"
    }
    maven {
       url "https://jitpack.io"
    }
  }
}

apply from: file("gradle/dependency-versions.gradle")

subprojects {
  apply plugin: 'eclipse'

  eclipse {
  	classpath {
  		containers 'org.springsource.ide.eclipse.gradle.classpathcontainer'
  	}
  }
}

project(':server-api') {
    apply plugin: 'java'

    dependencies {
        compile "io.dropwizard.metrics:metrics-core:$dropwizardMetricsVersion"
        compile "io.dropwizard.metrics:metrics-graphite:$dropwizardMetricsVersion"
        compile "org.slf4j:slf4j-api:$slf4jVersion"
        compile "org.slf4j:jcl-over-slf4j:$slf4jVersion"
        compile "org.slf4j:slf4j-jdk14:$slf4jVersion"
        compile "org.slf4j:slf4j-simple:$slf4jVersion"
        compile "org.slf4j:slf4j-log4j12:$slf4jVersion"
        compile "org.apache.commons:commons-lang3:$commonsVersion"

    }

}
project(':flink-server') {
    apply plugin: 'com.github.johnrengelman.shadow'
    apply plugin: 'java'

    shadowJar {
        zip64 true

        manifest {
            attributes 'Main-Class': 'edu.uci.eecs.wukong.framework.local.FlinkServer'
        }
        mergeServiceFiles()
        exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA'
        baseName = project.name
    }

    dependencies {
        compile project(':server-api')
        compile "org.apache.flink:flink-streaming-java_2.11:$flinkVersion"
        compile "org.apache.flink:flink-streaming-scala_2.11:$flinkVersion"
        compile "org.apache.flink:flink-clients_2.11:$flinkVersion"
        compile "cc.mallet:mallet:$malletVersion"
        compile "com.github.sanity:quickml:$quickMLVersion"
        compile "com.twitter.common:stats-util:0.0.60"
        compile "com.amazonaws:amazon-kinesis-producer:$kinesisProducerVersion"
        compile "com.google.guava:guava:$guavaVersion"
        compile "org.apache.flink:flink-metrics-dropwizard:1.3.0"
        compile "org.apache.flink:flink-metrics-graphite:1.3.0"
    }
}

project(':server') {
    apply plugin: 'java'

    task fatJar (type: Jar) {
        manifest {
            attributes 'Main-Class': 'edu.uci.eecs.wukong.framework.ProgressionServer'
        }
        exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA'
        baseName = project.name + '-all'
        from {
            configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
        }
        with jar
    }

    dependencies {
        compile project(':server-api')
        compile "io.dropwizard.metrics:metrics-core:$dropwizardMetricsVersion"
        compile "io.dropwizard.metrics:metrics-graphite:$dropwizardMetricsVersion"
        compile "be.ac.ulg.montefiore.run.jahmm:jahmm:$jahmmVersion"
        compile "junit:junit:$junitVersion"
        compile "io.netty:netty-all:$nettyVersion"
        compile "com.google.protobuf:protobuf-java:$protobufVersion"
        compile "com.google.code.gson:gson:$gsonVersion"
        compile "org.apache.httpcomponents:httpclient:$httpClientVersion"
        compile "commons-httpclient:commons-httpclient:$commonsClientVersion"
        compile "commons-cli:commons-cli:$commonsCliVersion"
        compile "org.apache.commons:commons-math3:$commonsMathVersion"
        compile "com.google.guava:guava:$guavaVersion"
        compile "org.eclipse.jetty.aggregate:jetty-all:$jettyVersion"
        compile "org.slf4j:slf4j-api:$slf4jVersion"
        compile "org.slf4j:jcl-over-slf4j:$slf4jVersion"
        compile "org.slf4j:slf4j-jdk14:$slf4jVersion"
        compile "org.slf4j:slf4j-simple:$slf4jVersion"
        compile "org.slf4j:slf4j-log4j12:$slf4jVersion"
        compile "org.igniterealtime.smack:smack-java7:$smackJavaVersion"
        compile "org.igniterealtime.smack:smack-core:$smackCoreVersion"
        compile "org.igniterealtime.smack:smack-extensions:$smackExtensionVersion"
        compile "org.igniterealtime.smack:smack-tcp:$smackTcpVersion"
        compile "org.mongodb:mongo-java-driver:$mongoDriverVersion"
        compile "com.googlecode.protobuf-rpc-pro:protobuf-rpc-pro-duplex:$protobufRpcVersion"
        compile "commons-lang:commons-lang:$commonsLangVersion"
        compile "nz.ac.waikato.cms.weka:weka-dev:$wekaVersion"
        compile "org.mockito:mockito-all:$mockitoVersion"
        compile "org.ow2.chameleon.fuchsia.base.philips-hue:org.ow2.chameleon.fuchsia.base.philips-hue.huedsk-bundle:$hueVersion"
        compile "tw.edu.ntu.csie:libsvm:$libsvm"
        compile "org.glassfish.jersey.core:jersey-server:$jerseyServerVersion"
        compile "org.glassfish.jersey.containers:jersey-container-servlet-core:$jerseyContainerServletCoreVersion"
        compile "org.glassfish.jersey.media:jersey-media-moxy:$jerseyMediaMoxyVersion"
        compile "org.glassfish.jersey.containers:jersey-container-jetty-http:$jerseyContainerJettyHttpVersion"
    }
}

task copyToBin () {
    copy {
        String propSource = "server/build/libs/server-all.jar"
        String propDest = "bin"
        from file(propSource)
        into file(propDest)
    }

    copy {
        String propSource = "flink-server/build/libs/flink-server-all.jar"
        String propDest = "bin"
        from file(propSource)
        into file(propDest)
    }
}

task buildServer (dependsOn: [':server:build', ':server:fatJar', ':flink-server:build', ':flink-server:shadowJar', 'copyToBin', ])
