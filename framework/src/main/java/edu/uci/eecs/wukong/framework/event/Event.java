package edu.uci.eecs.wukong.framework.event;

import edu.uci.eecs.wukong.framework.prclass.PrClass;

public class Event<T extends Object> implements Comparable<Event> {
	
	public static enum EventType {
		FACTOR("FACTOR"),   /* Factor publication from XMPP */
		CHANNEL("CHANNEL"), /* Channel data from WKPF */
		FEATURE("FEATURE"), /* Features generated by feature extraction extension */
		MODEL("MODEL");   /* specifically for model generated from learning extension */
		
		private String name;
		private EventType(String name) {
			this.name = name;
		}
	}
	
	// mark for extension dispatch
	private PrClass prClass;
	private T data;
	private EventType type;
	private int priority;
	
	public Event(PrClass prClass, T data, EventType type, int priority) {
		this.priority = priority;
		this.prClass = prClass;
		this.data = data;
		this.type = type;
	}

	public int compareTo(Event o){
		return this.priority >= o.priority ? 1 : -1;
	}

	public void setData(T data) {
		this.data = data;
	}

	public T getData() {
		// TODO Auto-generated method stub
		return data;
	}

	public PrClass getPrClass() {
		return prClass;
	}

	public void setPrClass(PrClass prClass) {
		this.prClass = prClass;
	}

	public EventType getType() {
		return type;
	}

	public void setType(EventType type) {
		this.type = type;
	}

	public int getPriority() {
		return priority;
	}

	public void setPriority(int priority) {
		this.priority = priority;
	}
}
